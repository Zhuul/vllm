# Build configuration
#
# Scripts should source this file to obtain default versions.
# Values can be overridden by environment variables provided at runtime.

# CUDA / UBI / Python baselines
export CUDA_VERSION=${CUDA_VERSION:-13.0.0}
export UBI_VERSION=${UBI_VERSION:-9}
export PYTHON_VERSION=${PYTHON_VERSION:-3.12}
export BASE_FLAVOR=${BASE_FLAVOR:-rockylinux9}

# vLLM branch/tag to use inside the container when cloning or referring
export VLLM_TAG=${VLLM_TAG:-main}

# Architectures (space separated) for PyTorch/NVCC
# Include Blackwell sm_120 via TORCH_CUDA_ARCH_LIST="7.0 7.5 8.0 8.6 8.9 9.0 12.0"
export TORCH_CUDA_ARCH_LIST=${TORCH_CUDA_ARCH_LIST:-"7.0 7.5 8.0 8.6 8.9 9.0 12.0 13.0"}

# Named volume for build scratch/work dir (Podman recommended)
export VLLM_WORK_VOLUME=${VLLM_WORK_VOLUME:-vllm-work}
export VLLM_WORK_DIR_CONTAINER=${VLLM_WORK_DIR_CONTAINER:-/opt/work}

# Image naming
export VLLM_BASE_IMAGE=${VLLM_BASE_IMAGE:-"nvidia/cuda:${CUDA_VERSION}-cudnn-devel-${BASE_FLAVOR}"}
export VLLM_IMAGE_TAG=${VLLM_IMAGE_TAG:-"vllm-cuda${CUDA_VERSION}-ubi${UBI_VERSION}"}

# Torch family components: wheels only (nightly index). No source build fallbacks.
export INSTALL_TORCHVISION=${INSTALL_TORCHVISION:-1}
export INSTALL_TORCHAUDIO=${INSTALL_TORCHAUDIO:-1}

# FFMPEG optional enforcement for torchaudio features
# Set to 1 to enable RPM Fusion repos and install ffmpeg/ffmpeg-devel; build will fail if unavailable.
# Set to 0 to attempt best-effort install and fallback to building torchaudio without FFMPEG when headers are missing.
#export REQUIRE_FFMPEG=${REQUIRE_FFMPEG:-0}
export REQUIRE_FFMPEG=${REQUIRE_FFMPEG:-1}